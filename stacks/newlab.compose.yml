version: '2'
services:
  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: unless-stopped
    environment:
      TZ: America/Detroit
    ports:
      - 9999:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

#  netdata:
#    image: netdata/netdata
#    container_name: netdata
#    restart: unless-stopped
#    cap_add:
#      - SYS_PTRACE
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys/:ro
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    environment:
#      TZ: America/Detroit
#    ports:
#      - 19999:19999
#    security_opt:
#      - apparmor:unconfined

  watchtower:
#    image: v2tec/watchtower:armhf-latest
    image: v2tec/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30

#  adminer:
#    image: adminer
#    container_name: adminer
#    restart: unless-stopped
#    ports:
#      - 8081:8080

  gitlab:
    image: 'gitlab/gitlab-ce:latest'
    restart: always
    hostname: 'gitlab.example.com'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.example.com:8929'
        gitlab_rails['gitlab_shell_ssh_port'] = 2224
    ports:
      - '8929:8929'
      - '2224:22'
    volumes:
      - '/opt/docker/volumes/gitlab/config:/etc/gitlab'
      - '/opt/docker/volumes/gitlab/logs:/var/log/gitlab'
      - '/opt/docker/volumes/gitlab/data:/var/opt/gitlab'

  akaunting:
    image: sameersbn/akaunting:1.3.9
    container_name: akaunting
    restart: unless-stopped
    command: app:akaunting
    environment:
      - DEBUG=true
      - TZ=America/Detroit
      - DB_HOST=mysql
      - DB_USER=akaunting
      - DB_PASS=password
      - DB_NAME=akaunting_db
      - MAIL_DRIVER=smtp
      - MAIL_HOST=smtp.gmail.com
      - MAIL_PORT=587
      - MAIL_FROM_ADDRESS=USERNAME@gmail.com
      - MAIL_FROM_NAME=John Doe
      - MAIL_ENCRYPTION=TLS
      - MAIL_USERNAME=USERNAME@gmail.com
      - MAIL_PASSWORD=PASSWORD
      - AKAUNTING_URL=http://localhost:10080
      - AKAUNTING_COMPANY_NAME=YOUR COMPANY
      - AKAUNTING_COMPANY_EMAIL=COMPANY@YOURDOMAIN.COM
      - AKAUNTING_ADMIN_EMAIL=USERNAME@gmail.com
      - AKAUNTING_ADMIN_PASSWORD=PASSWORD
      - AKAUNTING_BACKUPS_EXPIRY=0
    depends_on:
      - mysql
    volumes:
      - /opt/docker/volumes/akaunting/akaunting:/var/lib/akaunting

  mysql:
    image: sameersbn/mysql:5.7.24
    container_name: mysql_ak
    restart: unless-stopped
    environment:
      - DB_USER=akaunting
      - DB_PASS=password
      - DB_NAME=akaunting_db
    volumes:
      - /opt/docker/volumes/akaunting/mysql:/var/lib/mysql

  nginx:
    image: sameersbn/akaunting:1.3.9
    container_name: nginx_ak
    restart: unless-stopped
    command: app:nginx
    environment:
      - AKAUNTING_PHP_FPM_HOST=akaunting
      - AKAUNTING_PHP_FPM_PORT=9000
    depends_on:
      - akaunting
    ports:
      - "10080:80"

  tsdb:
    image: mariadb
    container_name: tsdb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: teamspeak

  teamspeak:
    image: teamspeak
    container_name: teamspeak
    restart: unless-stopped
    environment:
      TZ: America/Detroit
      TS3SERVER_DB_PLUGIN: ts3db_mariadb
      TS3SERVER_DB_SQLCREATEPATH: create_mariadb
      TS3SERVER_DB_HOST: tsdb
      TS3SERVER_DB_USER: root
      TS3SERVER_DB_PASSWORD: example
      TS3SERVER_DB_NAME: teamspeak
      TS3SERVER_DB_WAITUNTILREADY: 30
      TS3SERVER_LICENSE: accept
    volumes:
      - /opt/docker/volumes/teamspeak:/var/ts3server
    ports:
      - 9987:9987/udp
      - 10011:10011
      - 30033:30033
    depends_on: 
      - tsdb
    links:
      - tsdb

  ncdb:
    image: mariadb
    container_name: ncdb
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    environment:
      - MYSQL_ROOT_PASSWORD=example
    env_file:
      - /opt/docker/stacks/nextcloud/db.env

  app:
    image: nextcloud:fpm-alpine
    container_name: nextcloud
    restart: unless-stopped
    environment:
      - MYSQL_HOST=ncdb
    env_file:
      - /opt/docker/stacks/nextcloud/db.env
    volumes:
      - /media/orion/Seagate3.0/test/cloud:/var/www/html
    links:
      - ncdb
    depends_on:
      - ncdb

  ncweb:
    #image: nginx
    build: /opt/docker/stacks/nextcloud/web
    container_name: ncweb
    restart: unless-stopped
    volumes:
      - /opt/docker/stacks/nextcloud/web/nginx.conf:/etc/nginx/nginx.conf:ro
      - nextcloud:/var/www/html:ro
    environment:
      - VIRTUAL_HOST=localhost
    volumes_from:
      - app
    depends_on:
      - app
    ports:
      - 8079:80
    networks:
      - proxy-tier
      - default

  proxy:
    build: /opt/docker/stacks/nextcloud/proxy
    container_name: ncproxy
    restart: unless-stopped
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - 88:80
      - 4443:443
    networks:
      - proxy-tier
    depends_on:
      - omgwtfssl

  omgwtfssl:
    image: paulczar/omgwtfssl
    container_name: omgwtfssl
    restart: 'no'
    volumes:
      - certs:/certs
    environment:
      - SSL_SUBJECT=servebeer.com
      - CA_SUBJECT=eric@eweiss.me
      - SSL_KEY=/certs/servhostname.local.key
      - SSL_CSR=/certs/servhostname.local.csr
      - SSL_CERT=/certs/servhostname.local.crt
    networks:
      - proxy-tier

  lancache-dns:
    image: lancachenet/lancache-dns
    container_name: lancache-dns
    restart: unless-stopped
    environment:
      - USE_GENERIC_CACHE=true
      - LANCACHE_IP=192.168.1.106
    ports:
      - 53:53/udp

  monolithic:
    image: lancachenet/monolithic
    container_name: lancache
    restart: unless-stopped
    volumes:
      #- /opt/docker/volumes/lancache/cache:/data/cache
      - /media/orion/Seagate3.0/cache:/data/cache
      - /opt/docker/volumes/lancache/logs:/data/logs
    ports:
      - 80:80

  sniproxy:
    image: lancachenet/sniproxy
    container_name: sniproxy
    restart: unless-stopped
    ports:
      - 443:443

volumes:
  ncdb:
  nextcloud:
  certs:
  vhost.d:
  html:

networks:
  proxy-tier:
